// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
    .container {
        width: 85%;
        @include make-container();
        @include make-container-max-widths();

        @include media-breakpoint-down(xs) {
            width: 100% !important;
        }

        .container {
            width: 100%;
        }
    }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

@if $enable-grid-classes {
    .container-fluid {
        @include make-container();
    }
}

// Row
//
// Rows contain and clear the floats of your columns.

@if $enable-grid-classes {
    .row {
        @include make-row();
    }

    // Remove the negative margin from default .row, then the horizontal padding
    // from all immediate children columns (to prevent runaway style inheritance).
    .no-gutters {
        margin-right: 0;
        margin-left: 0;

        > .col,
        > [class*="col-"] {
            padding-right: 0;
            padding-left: 0;
        }
    }
}




@mixin col-x-list($className) {
    $col: '';

    @for $i from 1 through $grid-columns {
        $col: $col + '.' + $className + '-' + $i + ', ';

        #{'.'+$className+'-'+$i} {
            width: (100%/12)*$i;
        }
     
    }

    #{$col} {
        float: left;
    }
}

@include media-breakpoint-up(xs) {
    @include col-x-list('col-xs');
}

@include media-breakpoint-up(sm) {
    @include col-x-list('col-sm');
}

@include media-breakpoint-up(md) {
    @include col-x-list('col-md');
}

@include media-breakpoint-up(lg) {
    @include col-x-list('col-lg');
}
@include media-breakpoint-up(xl) {
    @include col-x-list('col-xl');
}
// .columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
    @include make-grid-columns();
}
